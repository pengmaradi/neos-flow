prototype(Custom.Template:Document.Fragment.Menu.Language) < prototype(Neos.Fusion:Component) {
    menuItems = Neos.Neos:DimensionsMenuItems {
        dimension = 'language'
    }

    renderer = afx`
		<div class="language-menu flex">
			<ul class="flex items-center justify-between self-center space-x-8">
				<Neos.Fusion:Loop items={props.menuItems}>
					<li @if.hasNode={item.node} class={item.state}>
						<Neos.Neos:NodeLink node={item.node} >
							<span class="language-menu-short" title={item.label}>{Configuration.setting('Neos.ContentRepository.contentDimensions.language.presets.' + item.targetDimensions.language.value + '.label')}</span>
						</Neos.Neos:NodeLink>
					</li>
					<li @if.hasNoNode={!item.node}>
						<span class="language-menu-short" title={item.label}>{Configuration.setting('Neos.ContentRepository.contentDimensions.language.presets.' + item.targetDimensions.language.value + '.label')}</span>
					</li>
				</Neos.Fusion:Loop>
			</ul>
		</div>
    `

    @cache {
        mode = 'cached'
        entryIdentifier {
            documentNode = ${documentNode}
        }
        entryTags {
            1 = ${Neos.Caching.nodeTypeTag('Neos.Neos:Document', documentNode)}
        }
    }

}
